{"version":3,"file":"vue.js","sources":["../../src/utils/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/core/state.js","../../src/core/initMixin.js","../../src/core/index.js"],"sourcesContent":["\n\n/**\n * @name: 当前数据是不是对象\n * @param {*}: \n * @return: Boolean\n */\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null\n}\n\nexport function def(data, key, value) {\n  Object.defineProperty(data, key, {\n    enumerable: false,\n    configurable: false,\n    value\n  })\n}","let oldArrayMethods = Array.prototype\n\nexport const arrayMethods = Object.create(oldArrayMethods)\n\n// 重写了会引起数组本身变化的api\nconst methods = ['push', 'pop', 'shift', 'unshift', 'sort', 'reverse', 'splie']\n\nmethods.forEach((method) => {\n\tarrayMethods[method] = function (...args) {\n\t\tlet result = oldArrayMethods[method].apply(this, args)\n\t\t// push unshift 添加的可能还是一个数组对象，需要对新添加的对象继续拦截\n\t\tlet inserted\n\t\tswitch (method) {\n\t\t\tcase 'push':\n\t\t\tcase 'unshift':\n\t\t\t\tinserted = args\n\t\t\t\tbreak\n\t\t\tcase 'splice':\n\t\t\t\tinserted = args.slice(2)\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t\t// 对新增的对象进行拦截\n\t\tlet ob = this.__ob__\n\t\tif(inserted) {\n\t\t\tob.observeArray(inserted)\n\t\t}\n\t\treturn result\n\t}\n})\n\n\n","import { isObject, def } from '../utils/index'\nimport { arrayMethods } from './array'\n// 使用Object.defineProperty() 重新定义\n\n// 用来观测数据\nexport class Observe {\n\tconstructor(data) {\n\t\tthis.data = data\n\t\t// 给监听过的数组添加 实例方法和属性\n\t\t// 直接挂在的话会造成死循环\n\t\t// data.__ob__ = this\n\t\t\n\t\tdef(data, '__ob__', this)\n\n    if(Array.isArray(data)) {\n      // 如果是数组的话，不要对索引进行观测，因为会有性能损耗\n      // 而且一般前端开发中很少直接操作索引。 基本使用push pop shift unshift ...\n\t\t\t// 对原生的数组方法进行重写\n\t\t\tdata.__proto__ = arrayMethods\n\n      // 如果数组中放的是对象的话在进行拦截\n      this.observeArray(data)\n    } else {\n      // 对对象进行拦截\n      this.walk(data)\n    }\n\t\t\n\t}\n\twalk(data) {\n\t\tlet keys = Object.keys(data)\n\t\tkeys.forEach((key) => {\n\t\t\t// 给每个属性添加劫持操作\n\t\t\tdefineReactive(data, key, data[key])\n\t\t})\n  }\n  \n  observeArray(data) {\n    data.forEach(item => {\n      observe(item)\n    })\n  }\n}\n\n// 数据劫持，收集响应\nfunction defineReactive(data, key, value) {\n\t// 如果value也是一个对象的话，递归实现深度监测\n\t// 多层object 会造成性能损耗\n\tobserve(value)\n\n\tObject.defineProperty(data, key, {\n\t\tget() {\n\t\t\treturn value\n\t\t},\n\t\tset(newValue) {\n\t\t\tif (newValue === value) return\n\t\t\tvalue = newValue\n\t\t\t// 可能用户设置的还是个对象，需要对新设置的值进行监测(劫持)\n\t\t\tobserve(value)\n\t\t},\n\t})\n}\n\nexport function observe(data) {\n\tlet ob\n\tif (!isObject(data)) {\n\t\treturn\n\t} else {\n\t\tob = new Observe(data)\n\t}\n\n\treturn ob\n}\n","import { observe } from '../observe/index'\n\nexport function initState(vm) {\n\tconst opts = vm.$options\n\t// vue 的数据来源： 属性、方法、数据、计算属性、watch\n\tif (opts.props) {\n\t\tinitProps(vm)\n\t}\n\n\tif (opts.methods) {\n\t\tinitMethods(vm)\n\t}\n\n\tif (opts.data) {\n\t\tinitData(vm)\n\t}\n\n\tif (opts.computed) {\n\t\tinitComputed(vm)\n\t}\n\n\tif (opts.watch) {\n\t\tinitWatch(vm)\n\t}\n}\n\nfunction initProps() {}\nfunction initMethods() {}\nfunction initData(vm) {\n\tlet data = vm.$options.data\n\t// data最终得到的是个object\n\tdata = vm._data = typeof data === 'function' ? data.call(vm) : data || {}\n\n\t// 获取到数据并对数据进行劫持\n\t// 添加响应，Object.defineProperty() 给属性添加get set方法\n\tobserve(data)\n}\nfunction initComputed() {}\nfunction initWatch() {}\n","import { initState } from './state'\n\nfunction initMixin(Vue) {\n\t// 初始化流程\n\tVue.prototype._init = function (options) {\n\t\tconst vm = this\n\t\tvm.$options = options\n\n\t\t// 初始化状态\n\t\tinitState(vm)\n\t}\n}\n\nexport { initMixin }\n","import { initMixin } from './initMixin'\n\n// Vue 的核心代码\nfunction Vue(options) {\n\t// if(process.env.NODE_ENV !== 'production' && !(this instanceof Vue)) {\n\t//   console.warn('Vue is a constructor and should be called with the `new` keyword')\n\t// }\n\n\tthis._init(options)\n}\n\ninitMixin(Vue)\n\nexport default Vue\n"],"names":["isObject","value","def","data","key","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","args","result","apply","inserted","slice","ob","__ob__","observeArray","Observe","isArray","__proto__","walk","keys","defineReactive","item","observe","get","set","newValue","initState","vm","opts","$options","props","initData","computed","watch","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}